{
  "name": "angular-form-builder",
  "version": "0.1.0",
  "description": "AngularJS form builder.",
  "homepage": "https://github.com/kelp404/angular-form-builder",
  "repository": {
    "type": "git",
    "url": "git://github.com/kelp404/angular-form-builder.git"
  },
  "keywords": [
    "AngularJS",
    "CoffeeScript"
  ],
  "author": {
    "name": "Kelp",
    "url": "https://github.com/kelp404"
  },
  "contributors": [
    {
      "name": "others",
      "url": "https://github.com/kelp404/angular-form-builder/graphs/contributors"
    }
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/mit-license.php"
    }
  ],
  "bugs": {
    "url": "https://github.com/kelp404/angular-form-builder/issues"
  },
  "devDependencies": {
    "grunt": "~0.4.2",
    "grunt-contrib-coffee": "^0.12.0",
    "grunt-contrib-compass": "^1.0.1",
    "grunt-contrib-connect": "^0.8.0",
    "grunt-contrib-uglify": "^0.6.0",
    "grunt-contrib-watch": "^0.6.1",
    "grunt-contrib-concat": "latest",
    "grunt-karma": "^0.9.0",
    "karma": "^0.12.16",
    "karma-coffee-preprocessor": "~0.2.1",
    "karma-jasmine": "^0.2.2",
    "karma-phantomjs-launcher": "^0.1.4",
    "karma-script-launcher": "~0.1.0"
  },
  "readme": "#Angular-Mongoose-Form-Builder [![Build Status](https://secure.travis-ci.org/kelp404/angular-form-builder.png?branch=master)](http://travis-ci.org/kelp404/angular-form-builder) [![devDependency Status](https://david-dm.org/kelp404/angular-form-builder/dev-status.png?branch=master)](https://david-dm.org/kelp404/angular-form-builder#info=devDependencies&view=table)\n\n[MIT License](http://www.opensource.org/licenses/mit-license.php)\n\n\n\n##Frameworks\n1. [AngularJS](http://angularjs.org/) 1.2.18\n2. [jQuery](http://jquery.com/) 2.1.0\n3. [Bootstrap 3](http://getbootstrap.com/)\n4. [angular-validator](https://github.com/kelp404/angular-validator)\n\n\n\n\n##$builder\n```coffee\n# just $builder\nangular.module 'yourApp', ['builder']\n\n# include $builder and default components\nangular.module 'yourApp', ['builder', 'builder.components']\n```\n\n\n####components\n>\n```coffee\n###\nAll components.\n###\n$builder.components =\n    componentName{string}: component{object}\n```\n\n\n####groups\n>\n```coffee\n###\nAll groups of components.\n###\n$builder.groups = [componentGroup{string}]\n```\n\n\n####registerComponent\n>\n```coffee\n# .config\n$builderProvider.registerComponent = (name, component={}) ->\n    ###\n    Register the component for form-builder.\n    @param name: The component name.\n    @param component: The component object.\n        group: {string} The component group.\n        label: {string} The label of the input.\n        description: {string} The description of the input.\n        placeholder: {string} The placeholder of the input.\n        editable: {bool} Is the form object editable?\n        required: {bool} Is the form object required?\n        validation: {string} angular-validator. \"/regex/\" or \"[rule1, rule2]\". (default is '/.*/')\n        validationOptions: {array} [{rule: angular-validator, label: 'option label'}] the options for the validation. (default is [])\n        options: {array} The input options.\n        arrayToText: {bool} checkbox could use this to convert input (default is no)\n        template: {string} html template\n        templateUrl: {string} The url of the template.\n        popoverTemplate: {string} html template\n        popoverTemplateUrl: {string} The url of the popover template.\n    ###\n# .run\n$builder.registerComponent = (name, component={}) ->\n```\n\n>component.template\n```html\n<div class=\"form-group\">\n    <label for=\"{{name+index}}\" class=\"col-md-4 control-label\" ng-class=\"{'fb-required':required}\">{{label}}</label>\n    <div class=\"col-md-8\">\n        <input type=\"text\" ng-model=\"inputText\" validator-required=\"{{required}}\" id=\"{{name+index}}\" class=\"form-control\" placeholder=\"{{placeholder}}\"/>\n        <p class='help-block'>{{description}}</p>\n    </div>\n</div>\n```\n\n>component.popoverTemplate\n```html\n<form>\n    <div class=\"form-group\">\n        <label class='control-label'>Label</label>\n        <input type='text' ng-model=\"label\" validator=\"[required]\" class='form-control'/>\n    </div>\n    <div class=\"form-group\">\n        <label class='control-label'>Description</label>\n        <input type='text' ng-model=\"description\" class='form-control'/>\n    </div>\n    <div class=\"form-group\">\n        <label class='control-label'>Placeholder</label>\n        <input type='text' ng-model=\"placeholder\" class='form-control'/>\n    </div>\n    <div class=\"checkbox\">\n        <label>\n            <input type='checkbox' ng-model=\"required\" />\n            Required</label>\n    </div>\n    <div class=\"form-group\" ng-if=\"validationOptions.length > 0\">\n        <label class='control-label'>Validation</label>\n        <select ng-model=\"$parent.validation\" class='form-control' ng-options=\"option.rule as option.label for option in validationOptions\"></select>\n    </div>\n    <hr/>\n    <div class='form-group'>\n        <input type='submit' ng-click=\"popover.save($event)\" class='btn btn-primary' value='Save'/>\n        <input type='button' ng-click=\"popover.cancel($event)\" class='btn btn-default' value='Cancel'/>\n        <input type='button' ng-click=\"popover.remove($event)\" class='btn btn-danger' value='Delete'/>\n    </div>\n</form>\n```\n\n\n####forms\n>\n```coffee\n###\nbuilder mode: `fb-builder` you could drag and drop to build the form.\nform mode: `fb-form` this is the form for end-user to input value.\nDefault is {default: []}\n###\n$builder.forms =\n    formName{string}: formObjects{array}\n```\n\n\n####insertFormObject\n>\n```coffee\n$builder.insertFormObject = (name, index, formObject={}) =>\n    ###\n    Insert the form object into the form at {index}.\n    @param name: The form name.\n    @param index: The form object index.\n    @param form: The form object.\n        id: The form object id.\n        component: {string} The component name\n        editable: {bool} Is the form object editable? (default is yes)\n        label: {string} The form object label.\n        description: {string} The form object description.\n        placeholder: {string} The form object placeholder.\n        options: {array} The form object options.\n        required: {bool} Is the form object required? (default is no)\n        validation: {string} angular-validator. \"/regex/\" or \"[rule1, rule2]\".\n        [index]: {int} The form object index. It will be generated by $builder.\n    @return: The form object.\n    ###\n```\n\n####addFormObject\n>\n```coffee\n$builder.addFormObject = (name, formObject={}) =>\n    ###\n    Insert the form object into the form at last.\n    reference $builder.insertFormObject()\n    ###\n```\n\n####removeFormObject\n>\n```coffee\n$builder.removeFormObject = (name, index) =>\n    ###\n    Remove the form object by the index.\n    @param name: {string} The form name.\n    @param index: {int} The form object index.\n    ###\n```\n\n\n\n\n##builder.directive\n####fb-components\n>\n```coffee\na = angular.module 'builder.directive', ['builder.provider', 'builder.controller', 'builder.drag', 'validator']\nfbComponents = ->\n    ###\n    You could use `fb-components` to render the components view.\n    ###\n    restrict: 'A'\n    template:\n        \"\"\"\n        <ul ng-if=\"groups.length > 1\" class=\"nav nav-tabs nav-justified\">\n            <li ng-repeat=\"group in groups\" ng-class=\"{active:activeGroup==group}\">\n                <a href='#' ng-click=\"selectGroup($event, group)\">{{group}}</a>\n            </li>\n        </ul>\n        <div class='form-horizontal'>\n            <div class='fb-component' ng-repeat=\"component in components\"\n                fb-component=\"component\"></div>\n        </div>\n        \"\"\"\n    controller: 'fbComponentsController'\na.directive 'fbComponents', fbComponents\n```\n\n>\n```html\n<div fb-components></div>\n```\n\n\n####fb-builder\n>\n```coffee\na = angular.module 'builder.directive', ['builder.provider', 'builder.controller', 'builder.drag', 'validator']\nfbBuilder = ($injector) ->\n    ###\n    You could use `fb-builder=\"formName\"` to render the builder view.\n    ###\n    restrict: 'A'\n    template:\n        \"\"\"\n        <div class='form-horizontal'>\n            <div class='fb-form-object-editable' ng-repeat=\"object in formObjects\"\n                fb-form-object-editable=\"object\"></div>\n        </div>\n        \"\"\"\n    link: (scope, element, attrs) ->\nfbBuilder.$inject = ['$injector']\na.directive 'fbBuilder', fbBuilder\n```\n\n>\n```html\n<div fb-builder=\"default\"></div>\n```\n\n\n####fb-form\n>\n```coffee\na = angular.module 'builder.directive', ['builder.provider', 'builder.controller', 'builder.drag', 'validator']\nfbForm = ($injector) ->\n    ###\n    You could use `fb-form=\"formName\"` to render the form view for end-users.\n    ###\n    restrict: 'A'\n    require: 'ngModel'  # form data (end-user input value)\n    scope:\n        # input model for scops in ng-repeat\n        input: '=ngModel'\n    template:\n        \"\"\"\n        <div class='fb-form-object' ng-repeat=\"object in form\" fb-form-object=\"object\">\n        </div>\n        \"\"\"\n    controller: 'fbFormController'\n    link: (scope, element, attrs) ->\nfbForm.$inject = ['$injector']\na.directive 'fbForm', fbForm\n```\n\n>\n```html\n<form class=\"form-horizontal\">\n    <div ng-model=\"input\" fb-form=\"default\" fb-default=\"defaultValue\"></div>\n    <div class=\"form-group\">\n        <div class=\"col-md-8 col-md-offset-4\">\n            <input type=\"submit\" ng-click=\"submit()\" class=\"btn btn-default\"/>\n        </div>\n    </div>\n</form>\n```\n\n\n\n\n##builder.components\n> There are some default components at this module. This module is not required.\n+ textInput\n+ textArea\n+ checkbox\n+ radio\n+ select\n\n\n\n\n##Unit Test\n>\n```bash\n$ grunt test\n```\n\n\n\n\n##Development\n```bash\n# install node modules\n$ npm install\n# install bower components\n$ bower install\n```\n```bash\n# run the local server and the file watcher to compile CoffeeScript\n$ grunt dev\n# compile coffee script and minify\n$ grunt build\n```\n",
  "readmeFilename": "README.md",
  "_id": "angular-form-builder@0.1.0",
  "_shasum": "40806e67469d40ff69b4bd134631305ea110a7fe",
  "_resolved": "git+https://github.com/vtrecsports/angular-mongoose-form-builder.git#d2532e677b67aae338cbe3b9fcf6489714e26585",
  "_from": "angular-mongoose-form-builder@git+https://github.com/vtrecsports/angular-mongoose-form-builder.git"
}
